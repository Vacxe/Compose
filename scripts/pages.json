[{"name":"ComposeScreen<T> ComposeScreen(AndroidComposeTestRule<?, ?> composeTestRule)","description":"io.github.kakaocup.compose.screen.ComposeScreen.ComposeScreen","location":"compose/io.github.kakaocup.compose.screen/-compose-screen/-compose-screen.html","searchKeys":["ComposeScreen","ComposeScreen<T> ComposeScreen(AndroidComposeTestRule<?, ?> composeTestRule)","io.github.kakaocup.compose.screen.ComposeScreen.ComposeScreen"]},{"name":"KNode KNode(ComposeScreen<?> composeScreen, Function1<ViewBuilder, Unit> function)","description":"io.github.kakaocup.compose.node.KNode.KNode","location":"compose/io.github.kakaocup.compose.node/-k-node/-k-node.html","searchKeys":["KNode","KNode KNode(ComposeScreen<?> composeScreen, Function1<ViewBuilder, Unit> function)","io.github.kakaocup.compose.node.KNode.KNode"]},{"name":"SemanticsNodeInteraction getNodeInteraction()","description":"io.github.kakaocup.compose.node.KNode.getNodeInteraction","location":"compose/io.github.kakaocup.compose.node/-k-node/get-node-interaction.html","searchKeys":["getNodeInteraction","SemanticsNodeInteraction getNodeInteraction()","io.github.kakaocup.compose.node.KNode.getNodeInteraction"]},{"name":"T perform(Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.core.KDSL.perform","location":"compose/io.github.kakaocup.compose.node.core/-k-d-s-l/perform.html","searchKeys":["perform","T perform(Function1<T, Unit> function)","io.github.kakaocup.compose.node.core.KDSL.perform"]},{"name":"Unit assertContentDescriptionContains(String value, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.NodeAssertions.assertContentDescriptionContains","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-content-description-contains.html","searchKeys":["assertContentDescriptionContains","Unit assertContentDescriptionContains(String value, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.NodeAssertions.assertContentDescriptionContains"]},{"name":"Unit assertContentDescriptionEquals(String values)","description":"io.github.kakaocup.compose.node.NodeAssertions.assertContentDescriptionEquals","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-content-description-equals.html","searchKeys":["assertContentDescriptionEquals","Unit assertContentDescriptionEquals(String values)","io.github.kakaocup.compose.node.NodeAssertions.assertContentDescriptionEquals"]},{"name":"Unit assertDoesNotExist()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertDoesNotExist","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-does-not-exist.html","searchKeys":["assertDoesNotExist","Unit assertDoesNotExist()","io.github.kakaocup.compose.node.NodeAssertions.assertDoesNotExist"]},{"name":"Unit assertExists()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertExists","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-exists.html","searchKeys":["assertExists","Unit assertExists()","io.github.kakaocup.compose.node.NodeAssertions.assertExists"]},{"name":"Unit assertHasClickAction()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertHasClickAction","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-has-click-action.html","searchKeys":["assertHasClickAction","Unit assertHasClickAction()","io.github.kakaocup.compose.node.NodeAssertions.assertHasClickAction"]},{"name":"Unit assertHasNoClickAction()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertHasNoClickAction","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-has-no-click-action.html","searchKeys":["assertHasNoClickAction","Unit assertHasNoClickAction()","io.github.kakaocup.compose.node.NodeAssertions.assertHasNoClickAction"]},{"name":"Unit assertIsDisplayed()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsDisplayed","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-displayed.html","searchKeys":["assertIsDisplayed","Unit assertIsDisplayed()","io.github.kakaocup.compose.node.NodeAssertions.assertIsDisplayed"]},{"name":"Unit assertIsEnabled()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsEnabled","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-enabled.html","searchKeys":["assertIsEnabled","Unit assertIsEnabled()","io.github.kakaocup.compose.node.NodeAssertions.assertIsEnabled"]},{"name":"Unit assertIsFocused()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsFocused","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-focused.html","searchKeys":["assertIsFocused","Unit assertIsFocused()","io.github.kakaocup.compose.node.NodeAssertions.assertIsFocused"]},{"name":"Unit assertIsNotDisplayed()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsNotDisplayed","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-not-displayed.html","searchKeys":["assertIsNotDisplayed","Unit assertIsNotDisplayed()","io.github.kakaocup.compose.node.NodeAssertions.assertIsNotDisplayed"]},{"name":"Unit assertIsNotEnabled()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsNotEnabled","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-not-enabled.html","searchKeys":["assertIsNotEnabled","Unit assertIsNotEnabled()","io.github.kakaocup.compose.node.NodeAssertions.assertIsNotEnabled"]},{"name":"Unit assertIsNotFocused()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsNotFocused","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-not-focused.html","searchKeys":["assertIsNotFocused","Unit assertIsNotFocused()","io.github.kakaocup.compose.node.NodeAssertions.assertIsNotFocused"]},{"name":"Unit assertIsNotSelected()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsNotSelected","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-not-selected.html","searchKeys":["assertIsNotSelected","Unit assertIsNotSelected()","io.github.kakaocup.compose.node.NodeAssertions.assertIsNotSelected"]},{"name":"Unit assertIsOff()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsOff","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-off.html","searchKeys":["assertIsOff","Unit assertIsOff()","io.github.kakaocup.compose.node.NodeAssertions.assertIsOff"]},{"name":"Unit assertIsOn()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsOn","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-on.html","searchKeys":["assertIsOn","Unit assertIsOn()","io.github.kakaocup.compose.node.NodeAssertions.assertIsOn"]},{"name":"Unit assertIsSelectable()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsSelectable","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-selectable.html","searchKeys":["assertIsSelectable","Unit assertIsSelectable()","io.github.kakaocup.compose.node.NodeAssertions.assertIsSelectable"]},{"name":"Unit assertIsSelected()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsSelected","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-selected.html","searchKeys":["assertIsSelected","Unit assertIsSelected()","io.github.kakaocup.compose.node.NodeAssertions.assertIsSelected"]},{"name":"Unit assertIsToggleable()","description":"io.github.kakaocup.compose.node.NodeAssertions.assertIsToggleable","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-is-toggleable.html","searchKeys":["assertIsToggleable","Unit assertIsToggleable()","io.github.kakaocup.compose.node.NodeAssertions.assertIsToggleable"]},{"name":"Unit assertRangeInfoEquals(ProgressBarRangeInfo value)","description":"io.github.kakaocup.compose.node.NodeAssertions.assertRangeInfoEquals","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-range-info-equals.html","searchKeys":["assertRangeInfoEquals","Unit assertRangeInfoEquals(ProgressBarRangeInfo value)","io.github.kakaocup.compose.node.NodeAssertions.assertRangeInfoEquals"]},{"name":"Unit assertTextContains(String value, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.NodeAssertions.assertTextContains","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-text-contains.html","searchKeys":["assertTextContains","Unit assertTextContains(String value, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.NodeAssertions.assertTextContains"]},{"name":"Unit assertTextEquals(String values, Boolean includeEditableText)","description":"io.github.kakaocup.compose.node.NodeAssertions.assertTextEquals","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-text-equals.html","searchKeys":["assertTextEquals","Unit assertTextEquals(String values, Boolean includeEditableText)","io.github.kakaocup.compose.node.NodeAssertions.assertTextEquals"]},{"name":"Unit assertValueEquals(String value)","description":"io.github.kakaocup.compose.node.NodeAssertions.assertValueEquals","location":"compose/io.github.kakaocup.compose.node/-node-assertions/assert-value-equals.html","searchKeys":["assertValueEquals","Unit assertValueEquals(String value)","io.github.kakaocup.compose.node.NodeAssertions.assertValueEquals"]},{"name":"Unit invoke(Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.core.KDSL.invoke","location":"compose/io.github.kakaocup.compose.node.core/-k-d-s-l/invoke.html","searchKeys":["invoke","Unit invoke(Function1<T, Unit> function)","io.github.kakaocup.compose.node.core.KDSL.invoke"]},{"name":"Unit performClick()","description":"io.github.kakaocup.compose.node.NodeActions.performClick","location":"compose/io.github.kakaocup.compose.node/-node-actions/perform-click.html","searchKeys":["performClick","Unit performClick()","io.github.kakaocup.compose.node.NodeActions.performClick"]},{"name":"Unit performGesture(Function1<GestureScope, Unit> block)","description":"io.github.kakaocup.compose.node.NodeActions.performGesture","location":"compose/io.github.kakaocup.compose.node/-node-actions/perform-gesture.html","searchKeys":["performGesture","Unit performGesture(Function1<GestureScope, Unit> block)","io.github.kakaocup.compose.node.NodeActions.performGesture"]},{"name":"Unit performImeAction()","description":"io.github.kakaocup.compose.node.TextActions.performImeAction","location":"compose/io.github.kakaocup.compose.node/-text-actions/perform-ime-action.html","searchKeys":["performImeAction","Unit performImeAction()","io.github.kakaocup.compose.node.TextActions.performImeAction"]},{"name":"Unit performScrollTo()","description":"io.github.kakaocup.compose.node.NodeActions.performScrollTo","location":"compose/io.github.kakaocup.compose.node/-node-actions/perform-scroll-to.html","searchKeys":["performScrollTo","Unit performScrollTo()","io.github.kakaocup.compose.node.NodeActions.performScrollTo"]},{"name":"Unit performScrollToIndex(Integer index)","description":"io.github.kakaocup.compose.node.NodeActions.performScrollToIndex","location":"compose/io.github.kakaocup.compose.node/-node-actions/perform-scroll-to-index.html","searchKeys":["performScrollToIndex","Unit performScrollToIndex(Integer index)","io.github.kakaocup.compose.node.NodeActions.performScrollToIndex"]},{"name":"Unit performScrollToKey(Object key)","description":"io.github.kakaocup.compose.node.NodeActions.performScrollToKey","location":"compose/io.github.kakaocup.compose.node/-node-actions/perform-scroll-to-key.html","searchKeys":["performScrollToKey","Unit performScrollToKey(Object key)","io.github.kakaocup.compose.node.NodeActions.performScrollToKey"]},{"name":"Unit performSemanticsAction(SemanticsPropertyKey<AccessibilityAction<Function0<Boolean>>> key)","description":"io.github.kakaocup.compose.node.NodeActions.performSemanticsAction","location":"compose/io.github.kakaocup.compose.node/-node-actions/perform-semantics-action.html","searchKeys":["performSemanticsAction","Unit performSemanticsAction(SemanticsPropertyKey<AccessibilityAction<Function0<Boolean>>> key)","io.github.kakaocup.compose.node.NodeActions.performSemanticsAction"]},{"name":"Unit performSemanticsAction<T extends Function<Boolean>>(SemanticsPropertyKey<AccessibilityAction<T>> key, Function1<T, Unit> invocation)","description":"io.github.kakaocup.compose.node.NodeActions.performSemanticsAction","location":"compose/io.github.kakaocup.compose.node/-node-actions/perform-semantics-action.html","searchKeys":["performSemanticsAction","Unit performSemanticsAction<T extends Function<Boolean>>(SemanticsPropertyKey<AccessibilityAction<T>> key, Function1<T, Unit> invocation)","io.github.kakaocup.compose.node.NodeActions.performSemanticsAction"]},{"name":"Unit performTextClearance()","description":"io.github.kakaocup.compose.node.TextActions.performTextClearance","location":"compose/io.github.kakaocup.compose.node/-text-actions/perform-text-clearance.html","searchKeys":["performTextClearance","Unit performTextClearance()","io.github.kakaocup.compose.node.TextActions.performTextClearance"]},{"name":"Unit performTextInput(String text)","description":"io.github.kakaocup.compose.node.TextActions.performTextInput","location":"compose/io.github.kakaocup.compose.node/-text-actions/perform-text-input.html","searchKeys":["performTextInput","Unit performTextInput(String text)","io.github.kakaocup.compose.node.TextActions.performTextInput"]},{"name":"Unit performTextInputSelection(TextRange selection)","description":"io.github.kakaocup.compose.node.TextActions.performTextInputSelection","location":"compose/io.github.kakaocup.compose.node/-text-actions/perform-text-input-selection.html","searchKeys":["performTextInputSelection","Unit performTextInputSelection(TextRange selection)","io.github.kakaocup.compose.node.TextActions.performTextInputSelection"]},{"name":"Unit performTextReplacement(String text)","description":"io.github.kakaocup.compose.node.TextActions.performTextReplacement","location":"compose/io.github.kakaocup.compose.node/-text-actions/perform-text-replacement.html","searchKeys":["performTextReplacement","Unit performTextReplacement(String text)","io.github.kakaocup.compose.node.TextActions.performTextReplacement"]},{"name":"ViewBuilder ViewBuilder(AndroidComposeTestRule<?, ?> composeTestRule)","description":"io.github.kakaocup.compose.node.ViewBuilder.ViewBuilder","location":"compose/io.github.kakaocup.compose.node/-view-builder/-view-builder.html","searchKeys":["ViewBuilder","ViewBuilder ViewBuilder(AndroidComposeTestRule<?, ?> composeTestRule)","io.github.kakaocup.compose.node.ViewBuilder.ViewBuilder"]},{"name":"abstract SemanticsNodeInteraction getNodeInteraction()","description":"io.github.kakaocup.compose.node.NodeActions.getNodeInteraction","location":"compose/io.github.kakaocup.compose.node/-node-actions/get-node-interaction.html","searchKeys":["getNodeInteraction","abstract SemanticsNodeInteraction getNodeInteraction()","io.github.kakaocup.compose.node.NodeActions.getNodeInteraction"]},{"name":"abstract SemanticsNodeInteraction getNodeInteraction()","description":"io.github.kakaocup.compose.node.NodeAssertions.getNodeInteraction","location":"compose/io.github.kakaocup.compose.node/-node-assertions/get-node-interaction.html","searchKeys":["getNodeInteraction","abstract SemanticsNodeInteraction getNodeInteraction()","io.github.kakaocup.compose.node.NodeAssertions.getNodeInteraction"]},{"name":"abstract SemanticsNodeInteraction getNodeInteraction()","description":"io.github.kakaocup.compose.node.TextActions.getNodeInteraction","location":"compose/io.github.kakaocup.compose.node/-text-actions/get-node-interaction.html","searchKeys":["getNodeInteraction","abstract SemanticsNodeInteraction getNodeInteraction()","io.github.kakaocup.compose.node.TextActions.getNodeInteraction"]},{"name":"final AndroidComposeTestRule<?, ?> getComposeTestRule()","description":"io.github.kakaocup.compose.screen.ComposeScreen.getComposeTestRule","location":"compose/io.github.kakaocup.compose.screen/-compose-screen/get-compose-test-rule.html","searchKeys":["getComposeTestRule","final AndroidComposeTestRule<?, ?> getComposeTestRule()","io.github.kakaocup.compose.screen.ComposeScreen.getComposeTestRule"]},{"name":"final SemanticsNodeInteraction getNodeInteraction()","description":"io.github.kakaocup.compose.node.ViewBuilder.getNodeInteraction","location":"compose/io.github.kakaocup.compose.node/-view-builder/get-node-interaction.html","searchKeys":["getNodeInteraction","final SemanticsNodeInteraction getNodeInteraction()","io.github.kakaocup.compose.node.ViewBuilder.getNodeInteraction"]},{"name":"final T onComposeScreen<T extends ComposeScreen<T>>(AndroidComposeTestRule<?, ?> composeTestRule, Function1<T, Unit> function)","description":"io.github.kakaocup.compose.screen.ComposeScreen.Companion.onComposeScreen","location":"compose/io.github.kakaocup.compose.screen/-compose-screen/-companion/on-compose-screen.html","searchKeys":["onComposeScreen","final T onComposeScreen<T extends ComposeScreen<T>>(AndroidComposeTestRule<?, ?> composeTestRule, Function1<T, Unit> function)","io.github.kakaocup.compose.screen.ComposeScreen.Companion.onComposeScreen"]},{"name":"final Unit hasAnyAncestor(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasAnyAncestor","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-any-ancestor.html","searchKeys":["hasAnyAncestor","final Unit hasAnyAncestor(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.ViewBuilder.hasAnyAncestor"]},{"name":"final Unit hasAnyChild(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasAnyChild","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-any-child.html","searchKeys":["hasAnyChild","final Unit hasAnyChild(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.ViewBuilder.hasAnyChild"]},{"name":"final Unit hasAnyDescendant(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasAnyDescendant","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-any-descendant.html","searchKeys":["hasAnyDescendant","final Unit hasAnyDescendant(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.ViewBuilder.hasAnyDescendant"]},{"name":"final Unit hasAnySibling(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasAnySibling","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-any-sibling.html","searchKeys":["hasAnySibling","final Unit hasAnySibling(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.ViewBuilder.hasAnySibling"]},{"name":"final Unit hasClickAction()","description":"io.github.kakaocup.compose.node.ViewBuilder.hasClickAction","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-click-action.html","searchKeys":["hasClickAction","final Unit hasClickAction()","io.github.kakaocup.compose.node.ViewBuilder.hasClickAction"]},{"name":"final Unit hasContentDescription(String value, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasContentDescription","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-content-description.html","searchKeys":["hasContentDescription","final Unit hasContentDescription(String value, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.ViewBuilder.hasContentDescription"]},{"name":"final Unit hasContentDescriptionExactly(String values)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasContentDescriptionExactly","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-content-description-exactly.html","searchKeys":["hasContentDescriptionExactly","final Unit hasContentDescriptionExactly(String values)","io.github.kakaocup.compose.node.ViewBuilder.hasContentDescriptionExactly"]},{"name":"final Unit hasImeAction(ImeAction actionType)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasImeAction","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-ime-action.html","searchKeys":["hasImeAction","final Unit hasImeAction(ImeAction actionType)","io.github.kakaocup.compose.node.ViewBuilder.hasImeAction"]},{"name":"final Unit hasNoClickAction()","description":"io.github.kakaocup.compose.node.ViewBuilder.hasNoClickAction","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-no-click-action.html","searchKeys":["hasNoClickAction","final Unit hasNoClickAction()","io.github.kakaocup.compose.node.ViewBuilder.hasNoClickAction"]},{"name":"final Unit hasNoScrollAction()","description":"io.github.kakaocup.compose.node.ViewBuilder.hasNoScrollAction","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-no-scroll-action.html","searchKeys":["hasNoScrollAction","final Unit hasNoScrollAction()","io.github.kakaocup.compose.node.ViewBuilder.hasNoScrollAction"]},{"name":"final Unit hasParent(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasParent","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-parent.html","searchKeys":["hasParent","final Unit hasParent(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.ViewBuilder.hasParent"]},{"name":"final Unit hasPosition(Integer position)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasPosition","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-position.html","searchKeys":["hasPosition","final Unit hasPosition(Integer position)","io.github.kakaocup.compose.node.ViewBuilder.hasPosition"]},{"name":"final Unit hasProgressBarRangeInfo(ProgressBarRangeInfo rangeInfo)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasProgressBarRangeInfo","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-progress-bar-range-info.html","searchKeys":["hasProgressBarRangeInfo","final Unit hasProgressBarRangeInfo(ProgressBarRangeInfo rangeInfo)","io.github.kakaocup.compose.node.ViewBuilder.hasProgressBarRangeInfo"]},{"name":"final Unit hasScrollAction()","description":"io.github.kakaocup.compose.node.ViewBuilder.hasScrollAction","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-scroll-action.html","searchKeys":["hasScrollAction","final Unit hasScrollAction()","io.github.kakaocup.compose.node.ViewBuilder.hasScrollAction"]},{"name":"final Unit hasScrollToIndexAction()","description":"io.github.kakaocup.compose.node.ViewBuilder.hasScrollToIndexAction","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-scroll-to-index-action.html","searchKeys":["hasScrollToIndexAction","final Unit hasScrollToIndexAction()","io.github.kakaocup.compose.node.ViewBuilder.hasScrollToIndexAction"]},{"name":"final Unit hasScrollToKeyAction()","description":"io.github.kakaocup.compose.node.ViewBuilder.hasScrollToKeyAction","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-scroll-to-key-action.html","searchKeys":["hasScrollToKeyAction","final Unit hasScrollToKeyAction()","io.github.kakaocup.compose.node.ViewBuilder.hasScrollToKeyAction"]},{"name":"final Unit hasSetTextAction()","description":"io.github.kakaocup.compose.node.ViewBuilder.hasSetTextAction","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-set-text-action.html","searchKeys":["hasSetTextAction","final Unit hasSetTextAction()","io.github.kakaocup.compose.node.ViewBuilder.hasSetTextAction"]},{"name":"final Unit hasStateDescription(String value)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasStateDescription","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-state-description.html","searchKeys":["hasStateDescription","final Unit hasStateDescription(String value)","io.github.kakaocup.compose.node.ViewBuilder.hasStateDescription"]},{"name":"final Unit hasTestTag(String testTag)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasTestTag","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-test-tag.html","searchKeys":["hasTestTag","final Unit hasTestTag(String testTag)","io.github.kakaocup.compose.node.ViewBuilder.hasTestTag"]},{"name":"final Unit hasText(String text, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasText","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-text.html","searchKeys":["hasText","final Unit hasText(String text, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.ViewBuilder.hasText"]},{"name":"final Unit hasTextExactly(String textValues, Boolean includeEditableText)","description":"io.github.kakaocup.compose.node.ViewBuilder.hasTextExactly","location":"compose/io.github.kakaocup.compose.node/-view-builder/has-text-exactly.html","searchKeys":["hasTextExactly","final Unit hasTextExactly(String textValues, Boolean includeEditableText)","io.github.kakaocup.compose.node.ViewBuilder.hasTextExactly"]},{"name":"final Unit invoke(Function1<T, Unit> function)","description":"io.github.kakaocup.compose.screen.ComposeScreen.invoke","location":"compose/io.github.kakaocup.compose.screen/-compose-screen/invoke.html","searchKeys":["invoke","final Unit invoke(Function1<T, Unit> function)","io.github.kakaocup.compose.screen.ComposeScreen.invoke"]},{"name":"final Unit isDialog()","description":"io.github.kakaocup.compose.node.ViewBuilder.isDialog","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-dialog.html","searchKeys":["isDialog","final Unit isDialog()","io.github.kakaocup.compose.node.ViewBuilder.isDialog"]},{"name":"final Unit isEnabled()","description":"io.github.kakaocup.compose.node.ViewBuilder.isEnabled","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-enabled.html","searchKeys":["isEnabled","final Unit isEnabled()","io.github.kakaocup.compose.node.ViewBuilder.isEnabled"]},{"name":"final Unit isFocusable()","description":"io.github.kakaocup.compose.node.ViewBuilder.isFocusable","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-focusable.html","searchKeys":["isFocusable","final Unit isFocusable()","io.github.kakaocup.compose.node.ViewBuilder.isFocusable"]},{"name":"final Unit isFocused()","description":"io.github.kakaocup.compose.node.ViewBuilder.isFocused","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-focused.html","searchKeys":["isFocused","final Unit isFocused()","io.github.kakaocup.compose.node.ViewBuilder.isFocused"]},{"name":"final Unit isHeading()","description":"io.github.kakaocup.compose.node.ViewBuilder.isHeading","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-heading.html","searchKeys":["isHeading","final Unit isHeading()","io.github.kakaocup.compose.node.ViewBuilder.isHeading"]},{"name":"final Unit isNotEnabled()","description":"io.github.kakaocup.compose.node.ViewBuilder.isNotEnabled","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-not-enabled.html","searchKeys":["isNotEnabled","final Unit isNotEnabled()","io.github.kakaocup.compose.node.ViewBuilder.isNotEnabled"]},{"name":"final Unit isNotFocusable()","description":"io.github.kakaocup.compose.node.ViewBuilder.isNotFocusable","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-not-focusable.html","searchKeys":["isNotFocusable","final Unit isNotFocusable()","io.github.kakaocup.compose.node.ViewBuilder.isNotFocusable"]},{"name":"final Unit isNotFocused()","description":"io.github.kakaocup.compose.node.ViewBuilder.isNotFocused","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-not-focused.html","searchKeys":["isNotFocused","final Unit isNotFocused()","io.github.kakaocup.compose.node.ViewBuilder.isNotFocused"]},{"name":"final Unit isNotSelected()","description":"io.github.kakaocup.compose.node.ViewBuilder.isNotSelected","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-not-selected.html","searchKeys":["isNotSelected","final Unit isNotSelected()","io.github.kakaocup.compose.node.ViewBuilder.isNotSelected"]},{"name":"final Unit isOff()","description":"io.github.kakaocup.compose.node.ViewBuilder.isOff","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-off.html","searchKeys":["isOff","final Unit isOff()","io.github.kakaocup.compose.node.ViewBuilder.isOff"]},{"name":"final Unit isOn()","description":"io.github.kakaocup.compose.node.ViewBuilder.isOn","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-on.html","searchKeys":["isOn","final Unit isOn()","io.github.kakaocup.compose.node.ViewBuilder.isOn"]},{"name":"final Unit isPopup()","description":"io.github.kakaocup.compose.node.ViewBuilder.isPopup","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-popup.html","searchKeys":["isPopup","final Unit isPopup()","io.github.kakaocup.compose.node.ViewBuilder.isPopup"]},{"name":"final Unit isRoot()","description":"io.github.kakaocup.compose.node.ViewBuilder.isRoot","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-root.html","searchKeys":["isRoot","final Unit isRoot()","io.github.kakaocup.compose.node.ViewBuilder.isRoot"]},{"name":"final Unit isSelectable()","description":"io.github.kakaocup.compose.node.ViewBuilder.isSelectable","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-selectable.html","searchKeys":["isSelectable","final Unit isSelectable()","io.github.kakaocup.compose.node.ViewBuilder.isSelectable"]},{"name":"final Unit isSelected()","description":"io.github.kakaocup.compose.node.ViewBuilder.isSelected","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-selected.html","searchKeys":["isSelected","final Unit isSelected()","io.github.kakaocup.compose.node.ViewBuilder.isSelected"]},{"name":"final Unit isToggleable()","description":"io.github.kakaocup.compose.node.ViewBuilder.isToggleable","location":"compose/io.github.kakaocup.compose.node/-view-builder/is-toggleable.html","searchKeys":["isToggleable","final Unit isToggleable()","io.github.kakaocup.compose.node.ViewBuilder.isToggleable"]},{"name":"final static KNode onNode(ComposeScreen<?> $self, Function1<ViewBuilder, Unit> function)","description":"io.github.kakaocup.compose.node.extensions.ScreenExtensionKt.onNode","location":"compose/io.github.kakaocup.compose.node.extensions/-screen-extension-kt/on-node.html","searchKeys":["onNode","final static KNode onNode(ComposeScreen<?> $self, Function1<ViewBuilder, Unit> function)","io.github.kakaocup.compose.node.extensions.ScreenExtensionKt.onNode"]},{"name":"public class Companion","description":"io.github.kakaocup.compose.screen.ComposeScreen.Companion","location":"compose/io.github.kakaocup.compose.screen/-compose-screen/-companion/index.html","searchKeys":["Companion","public class Companion","io.github.kakaocup.compose.screen.ComposeScreen.Companion"]},{"name":"public class ComposeScreen<T extends ComposeScreen<T>>","description":"io.github.kakaocup.compose.screen.ComposeScreen","location":"compose/io.github.kakaocup.compose.screen/-compose-screen/index.html","searchKeys":["ComposeScreen","public class ComposeScreen<T extends ComposeScreen<T>>","io.github.kakaocup.compose.screen.ComposeScreen"]},{"name":"public class KNode implements KDSL<KNode>, NodeAssertions, NodeActions, TextActions","description":"io.github.kakaocup.compose.node.KNode","location":"compose/io.github.kakaocup.compose.node/-k-node/index.html","searchKeys":["KNode","public class KNode implements KDSL<KNode>, NodeAssertions, NodeActions, TextActions","io.github.kakaocup.compose.node.KNode"]},{"name":"public final class ScreenExtensionKt","description":"io.github.kakaocup.compose.node.extensions.ScreenExtensionKt","location":"compose/io.github.kakaocup.compose.node.extensions/-screen-extension-kt/index.html","searchKeys":["ScreenExtensionKt","public final class ScreenExtensionKt","io.github.kakaocup.compose.node.extensions.ScreenExtensionKt"]},{"name":"public final class ViewBuilder","description":"io.github.kakaocup.compose.node.ViewBuilder","location":"compose/io.github.kakaocup.compose.node/-view-builder/index.html","searchKeys":["ViewBuilder","public final class ViewBuilder","io.github.kakaocup.compose.node.ViewBuilder"]},{"name":"public interface KDSL<T extends Object>","description":"io.github.kakaocup.compose.node.core.KDSL","location":"compose/io.github.kakaocup.compose.node.core/-k-d-s-l/index.html","searchKeys":["KDSL","public interface KDSL<T extends Object>","io.github.kakaocup.compose.node.core.KDSL"]},{"name":"public interface NodeActions","description":"io.github.kakaocup.compose.node.NodeActions","location":"compose/io.github.kakaocup.compose.node/-node-actions/index.html","searchKeys":["NodeActions","public interface NodeActions","io.github.kakaocup.compose.node.NodeActions"]},{"name":"public interface NodeAssertions","description":"io.github.kakaocup.compose.node.NodeAssertions","location":"compose/io.github.kakaocup.compose.node/-node-assertions/index.html","searchKeys":["NodeAssertions","public interface NodeAssertions","io.github.kakaocup.compose.node.NodeAssertions"]},{"name":"public interface TextActions","description":"io.github.kakaocup.compose.node.TextActions","location":"compose/io.github.kakaocup.compose.node/-text-actions/index.html","searchKeys":["TextActions","public interface TextActions","io.github.kakaocup.compose.node.TextActions"]}]
